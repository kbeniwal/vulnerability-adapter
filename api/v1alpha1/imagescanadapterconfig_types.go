/*
Copyright 2023.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type StatusResult string

// ImageScanAdapterConfigSpec defines the desired state of ImageScanAdapterConfig
type ImageScanAdapterConfigSpec struct {
	Severity           []string                        `json:"severity,omitempty"`
	PolicyReportPrefix string                          `json:"policyReportPrefix,omitempty"`
	ScannerEngine      string                          `json:"scannerEngine,omitempty"`
	OutputFormat       string                          `json:"outputFormat,omitempty"`
	ScanAll            bool                            `json:"scanAll,omitempty"`
	ScanInterval       string                          `json:"scanInterval,omitempty"`
	Selectors          ImageScanAdapterConfigSelectors `json:"selectors,omitempty"`
}

type ImageScanAdapterConfigSelectors struct {
	Namespaces []string `json:"namespaces,omitempty"`
}

// ImageScanAdapterConfigStatus defines the observed state of ImageScanAdapterConfig
type ImageScanAdapterConfigStatus struct {
	Result           StatusResult                       `json:"result,omitempty"`
	Message          string                             `json:"message,omitempty"`
	LastRunStartTime *metav1.Time                       `json:"lastRunStartTime,omitempty"`
	LastRunEndTime   *metav1.Time                       `json:"lastRunEndTime,omitempty"`
	LastRunStats     ImageScanAdapterConfigLastRunStats `json:"lastRunStats,omitempty"`
}

type ImageScanAdapterConfigLastRunStats struct {
	ImagesScanned int64 `json:"imagesScanned,omitempty"`
}

//+kubebuilder:object:root=true
//+kubebuilder:subresource:status

// ImageScanAdapterConfig is the Schema for the imagescanadapterconfigs API
type ImageScanAdapterConfig struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   ImageScanAdapterConfigSpec   `json:"spec,omitempty"`
	Status ImageScanAdapterConfigStatus `json:"status,omitempty"`
}

//+kubebuilder:object:root=true

// ImageScanAdapterConfigList contains a list of ImageScanAdapterConfig
type ImageScanAdapterConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ImageScanAdapterConfig `json:"items"`
}

//nolint:gochecknoinits
func init() {
	SchemeBuilder.Register(&ImageScanAdapterConfig{}, &ImageScanAdapterConfigList{})
}
